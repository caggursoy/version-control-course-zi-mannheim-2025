---
title: "{{< var title >}}"
subtitle: |
  Session 1
  
  [{{< fa brands internet-explorer >}} Slides]({{< var website >}}) |
  [{{< fa brands github >}} Source]({{< var source >}})
  
  {{< var slides.license-badge >}}
date: "2023-10-20"
format: revealjs
metadata-files:
  - _slides.yml
---

{{< include _about.qmd >}}

## Team

:::: {.columns}
::: {.column width="35%"}

### Instructor

![](../images/photo-wittkuhn-uhh.jpg){fig-alt="A portrait photo of Lennart Wittkuhn." width=89%}

#### Dr. Lennart Wittkuhn

{{< fa envelope >}} [{{< var team.lennart.email >}}]({{< var team.lennart.mailto >}})<br>
{{< fa brands github >}} [GitHub]({{< var team.lennart.github >}})
{{< fa home-user >}} [lennartwittkuhn.com]({{< var team.lennart.website >}})
:::

::: {.column width="35%"}

### Teaching Assistant

![](../images/photo_pagenstedt_portrait.jpeg){fig-alt="A portrait photo of Konrad Pagenstedt."}

#### Konrad Pagenstedt

{{< fa envelope >}} [{{< var team.konrad.email >}}]({{< var team.konrad.mailto >}})<br>
{{< fa brands github >}} [GitHub]({{< var team.konrad.github >}})

:::

::::

## Why we need version control ...

:::: {.columns}
::: {.column width="42%"}
::: {.fragment}
... for **code** (text files)
![[&copy; Jorge Cham (phdcomics.com)](http://phdcomics.com/comics/archive/phd101212s.gif)](http://phdcomics.com/comics/archive/phd101212s.gif)
:::
:::
::: {.column width="58%"}
::: {.fragment}
... for **data** (binary files)
![[&copy; Jorge Cham (phdcomics.com)](http://phdcomics.com/comics/archive/phd052810s.gif)](http://phdcomics.com/comics/archive/phd052810s.gif)
:::
::: {.fragment}
**When everything is relevant ...**
:::
::: {.fragment}
**... track everything.**
:::
:::
::::

::: {.notes}
- Version control is relevant for anyone who wants to track the evolution of digital objects
- Credit: Adapted from [Slides on "Research Data Management with DataLad"](http://datasets.datalad.org/datalad/datalad-course/html/mpsc-introduction.html#/5) by Adina Wagner & Michael Hanke]
:::

## What is version control?

::: {.fragment}
*"Version control is a systematic approach to record changes made in a [...] set of files, over time. This allows you and your collaborators to track the history, see what changed, and recall specific versions later [...]"* ([Turing Way](https://the-turing-way.netlify.app/reproducible-research/vcs.html))
:::

::::: {.columns}

:::: {.column width="50%"}
::: {.fragment}
{{< fa laptop-code >}} keep track of changes in a directory (a "repository")

{{< fa code-commit >}} take snapshots ("commits") of your repo at any time

{{< fa timeline >}} know the history: what was changed when by whom

{{< fa code-compare >}} compare commits and go back to any previous state

{{< fa code-pull-request >}} work on parallel "branches" & flexibly "merge" them

![[by Scriberia for The Turing Way community (CC-BY 4.0)](https://zenodo.org/record/3695300/files/VersionControl.jpg?download=1)](https://zenodo.org/record/3695300/files/VersionControl.jpg?download=1){width=80% fig-align="center"}
:::
::::

:::: {.column width="50%"}
::: {.fragment}
{{< fa upload >}} "push" your repo to a "remote" location & share it

{{< fa brands github >}} {{< fa brands gitlab >}} share repos on platforms like GitHub or GitLab

{{< fa people-group >}} work together on the same files at the same time

{{< fa pen-to-square >}} others can read, copy, edit and suggest changes

{{< fa box-open >}} make your repo public and openly share your work

![[by Scriberia for The Turing Way community (CC-BY 4.0)](https://zenodo.org/record/3695300/files/FirstPullRequest.jpg?download=1)](https://zenodo.org/record/3695300/files/FirstPullRequest.jpg?download=1){width=84% fig-align="center"}
:::
::::
:::::

## More benefits of Git(Hub) for (teaching) project management

::: {.incremental}
- {{< fa bug >}} Discuss and plan your teaching preparation in [issues](https://github.com/features/issues) (even just with your future / past self)
- {{< fa comments >}}  Ask questions, share ideas and discuss with your community via [GitHub Discussions](https://github.com/features/discussions)
- {{< fa code-pull-request >}} Propose changes to the teaching materials using [pull requests](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests) ^[*pull* requests on GitHub, *merge* requests on GitLab]
- {{< fa code-fork >}} Create a [fork](https://docs.github.com/en/get-started/quickstart/fork-a-repo) of someone else's repository and extend their teaching materials
- {{< fa key >}} Manage access to your teaching materials with detailed [permissions and roles](https://docs.gitlab.com/ee/user/permissions.html)
- {{< fa book-medical >}} Add documentation to your repository or in a separate [wiki](https://docs.github.com/en/communities/documenting-your-project-with-wikis/about-wikis)
- {{< fa graduation-cap >}} Access to more features and tools for teaching via [GitHub Campus Global](https://education.github.com/)
:::

::: {.fragment}
**Note**

- {{< fa brands github >}} The dominance of GitHub (a for-profit company owned by Microsoft) is not uncontested (see [#GiveUpGitHub](https://sfconservancy.org/GiveUpGitHub/))
- {{< fa boxes-packing >}} A project on GitHub is not a FAIR archiving of scholarly outputs (see previous and following slides)
:::

::: {.notes}
- GitHub Copilot is a for-profit AI product trained with projects that were hosted on GitHub, including many that have licenses that require proper author attribution etc.
- GitHub has a for-profit software services contract with the USA Immigration and Customs Enforcement (ICE)
- Archiving on GitHub is not enough
:::

## Overview

:::: {.columns}
::: {.column width="50%"}
- {{< fa calendar-days >}} **Date:** Winter semester 2023/24 (Oct to Feb)
- {{< fa clock >}} **Time:** Fridays, 10:15 to 11:45 am (90 minutes)
- {{< fa building-columns >}} **Room:** UHH, VMP 5, Room 4047
- {{< fa person-chalkboard >}} **Instructor:** [Dr. Lennart Wittkuhn]({{< var team.lennart.website >}})
:::
::: {.column width="50%"}
- {{< fa chalkboard >}} **Event:** Seminar
- {{< fa gem >}} **Credits:** 4,0
- {{< fa language >}} **Language:** English / German
- {{< fa tag >}} **Tag:** PsyM14-PsyWB-K02 
:::
::::

## What will the average seminar session look like?

::: {.fragment}
{{< fa clock >}} The course will consist of up to 14 sessions (90 minutes each)
:::

::: {.fragment}
1. {{< fa book-open >}} **Content Review (up to 30 minutes):**
<br> Course participants engage with [the online materials](https://lennartwittkuhn.com/version-control-book/), supplemented by concise presentations by the instructors.
Some course preparation may occur outside of the class.
:::

::: {.fragment}
2. {{< fa comments >}} **Interactive Discussions & Quizzes (up to 15 minutes):**
<br>Course participants collectively address any inquiries related to the session's content and online materials.
Instructor-led quiz questions may also be interspersed throughout.
:::

::: {.fragment}
3. {{< fa laptop-code >}} **Exercises & Implementation (up to 60 minutes):**
<br>Course participants actively delve into hands-on exercises and assignments.
:::

::: {.fragment}
Note, that course participants are **not required** (but are of course free) **to work on course materials outside of class time**.
All course contents will be covered during class time.
:::

## Schedule

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
create_schedule()
```

## Course Website

{{< fa brands internet-explorer >}} [lennartwittkuhn.com/version-control-course-uhh-ws23](https://lennartwittkuhn.com/version-control-course-uhh-ws23/)

```{=html}
<iframe width="100%" height="74%" src="https://lennartwittkuhn.com/version-control-course-uhh-ws23/" title="Course Website"></iframe>
```

::: {.notes}
- Course website is the main entry point for students before, during and after the course
- Contents: Overview, course details, schedule, information about the team, additional resources and course mechanics
- Practical advantage: Update course information independently from university websites that are out of your control
:::

## Version Control Book

{{< fa brands internet-explorer >}} [lennartwittkuhn.com/version-control-book](https://lennartwittkuhn.com/version-control-book)

```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-book" title="Version Control Book"></iframe>
```

## Survey




## Collaborative notes in HedgeDoc (UHH Pad)

:::: {.columns}
::: {.column width="40%"}

![](../images/hedgedoc-logo.png)

- {{< fa house >}} [HedgeDoc (UHH Pad)]({{< var links.hedgedoc >}})
- {{< fa link >}} [Notepad for Session 1](https://pad.uni-hamburg.de/L7JO6dsiTtSzWhjV6SvyKg?both)
- {{< fa pen-to-square >}} Edit notes using [Markdown]({{< var links.markdown >}}) (see [HedgeDoc Features]({{< var links.hedgedoc-features >}}) and Session 4)
- {{< fa key >}} No account or log-in required
- {{< fa warning >}} Notes are public!
Don't use it for personal or sensitive data!
- {{< fa clipboard >}} One notepad per session
- {{< fa lock >}} Notepad will be locked at the next session

:::
::: {.column width="60%"}

![](../images/hedgedoc-screenshot.png)
:::
::::

## DataLad

:::: {.columns}
::: {.column width="50%"}
![[&copy; Jorge Cham (phdcomics.com)](http://phdcomics.com/comics/archive/phd052810s.gif)](http://phdcomics.com/comics/archive/phd052810s.gif)
:::
::: {.column width="50%"}
![](../images/datalad-logo-full.svg){width="100%"}
:::
::::


## notes

explain course concept, resources, etc.

    explain how the course works: course structure
    show the course website and the book
    show the schedule
    show the hedgedoc pad (TODO: checkout how to make it invite-only, yes: "limited"), explain access
    explain how we collect data (and data-privacy)
    explain how the exercises work
    explain how to pass the course
        TODO: they need to provide their code word which will be connected to their student ID
        at the end of the course, we analyze how many responses happened per codeword
        we give a list of completed codewords to the secretary
        students can then reveal the codeword to the secretary, who checks if they completed all responses.
        TODO: check if secretary can add pass / fail in Stine
        make sure to properly record the code word on every session

prepare pair programming / buddy system

    participants stand in line ordered by previous experience in programming etc.
    the most experiences person is matched with the least experienced person (and so on)
    the more experienced person helps the less experience person (but does not touch the keyboard!)
    in all course, buddies sit next to each other and help each other out

show results from the pre-course questionnaire
